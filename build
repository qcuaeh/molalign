#!/bin/bash

PROGRAM=ralign
FORTRAN=gfortran
OPTIONS='-L/usr/lib64/atlas'
SRCDIR=./fortran
SRCLIST=./srclist
BUILDIR=./_build_dir
BINDIR=./bin

# Compile selected source files
compile () {
   objlist=()
   for file in "$@"; do
      srcfile=$SRCDIR/$file
      bldfile=$objdir/$file
      objfile=$objdir/${file%.*}.o
      objlist+=($objfile)
      if ! test -e "$objfile" || ! test -e "$bldfile" || ! diff -q "$srcfile" "$bldfile" > /dev/null; then
         rm -f "$objfile"
         cp -p "$srcfile" "$bldfile"
         echo Compiling "$file"
         $FORTRAN $options -c "$srcfile" -o "$objfile" -I "$objdir" -J "$objdir" || exit
      fi
   done
}

build () {
   case "$1" in
     single ) precopts='' ;;
     double ) precopts='-fdefault-real-8' ;;
     * ) echo Invalid precision option: $1; exit ;;
   esac
   case "$2" in
     slow ) buildopts='-O3' ;;
     fast ) buildopts='-O3 -ffast-math' ;;
     debug ) buildopts='-g -fbounds-check -fbacktrace -ffpe-trap=zero,invalid,overflow -O0 -Wall' ;;
     * ) echo Invalid optimization option: $2; exit ;;
   esac
   srclist=()
   objdir=$BUILDIR/$1/$2
   options="-llapack $OPTIONS $buildopts $precopts"
   if [[ -d $objdir ]]; then
      if [[ $RECOMPILE != true ]]; then
         for f in "$objdir"/*; do 
            rm "$f"
         done
      fi
   else
      mkdir -p "$objdir"
   fi
   while IFS= read -r line; do
      srclist+=("$line")
   done < <(grep -v '^#' "$SRCLIST")
   compile "${srclist[@]}"
   echo Linking $PROGRAM
   $FORTRAN $options "${objlist[@]}" -o "$BINDIR/$PROGRAM"
   echo
} 

shopt -s nullglob

if [[ -d $BINDIR ]]; then
   for file in "$BINDIR"/*; do
      rm "$file"
   done
else
   mkdir "$BINDIR"
fi

TEMP=$(getopt -a -o '' -l single,double,slow,debug -- "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi
eval set -- "$TEMP"

buildtype=fast
precision=double
while true; do
   case "$1" in
      --slow ) buildtype=slow; shift ;;
      --debug ) buildtype=debug; shift ;;
      --single ) precision=single; shift ;;
      --double ) precision=double; shift ;;
      -- ) shift; break ;;
   esac
done

build "$precision" "$buildtype"
