#!/bin/bash

PROGRAM=ralign
FORTRAN=gfortran
OPTIONS='-L/usr/lib64/atlas'
SRCDIR=./fortran
SRCLIST=./srclist
BUILDIR=./_build_dir
BINDIR=./bin

# Compile source file
compile () {
   srcfile=$SRCDIR/$1
   bldfile=$objdir/$1
   objfile=$objdir/${file%.*}.o
   objlist+=($objfile)
   if ! test -e "$objfile" || ! test -e "$bldfile" || ! diff -q "$srcfile" "$bldfile" > /dev/null; then
      rm -f "$objfile"
      cp -p "$srcfile" "$bldfile"
      echo Compiling "$1"
      $FORTRAN $options -c "$srcfile" -o "$objfile" -I "$objdir" -J "$objdir" || exit
   fi
}

shopt -s nullglob

if [[ -d $BINDIR ]]; then
   for file in "$BINDIR"/*; do
      rm "$file"
   done
else
   mkdir "$BINDIR"
fi

TEMP=$(getopt -a -o '' -l single,double,slow,fast,debug,static,dynamic -- "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi
eval set -- "$TEMP"

bintype=static
optlevel=fast

while true; do
   case "$1" in
      --slow) optlevel=slow; shift;;
      --fast) optlevel=fast; shift;;
      --debug) optlevel=debug; shift;;
      --static) bintype=static; shift;;
      --dynamic) bintype=dynamic; shift;;
      --) shift; break ;;
   esac
done

case "$bintype" in
 static) binflags='';;
 dynamic) binflags='-fPIC';;
 *) echo Invalid code type option: $bintype; exit;;
esac

case "$optlevel" in
 slow) optflags='-O3';;
 fast) optflags='-O3 -ffast-math';;
 debug) optflags='-g -fbounds-check -fbacktrace -ffpe-trap=zero,invalid,overflow -O0 -Wall';;
 *) echo Invalid optimization option: $optlevel; exit;;
esac

objdir=$BUILDIR/$bintype/$optlevel
options="$OPTIONS $binflags $optflags -llapack"
objlist=()

if [[ -d $objdir ]]; then
  if [[ $RECOMPILE != true ]]; then
     for f in "$objdir"/*; do 
        rm "$f"
     done
  fi
else
  mkdir -p "$objdir"
fi

while IFS= read -r file; do
  compile "$file"
done < <(grep -v '^#' "$SRCLIST")

echo Linking $PROGRAM
$FORTRAN $options "${objlist[@]}" -o "$BINDIR/$PROGRAM"
echo
